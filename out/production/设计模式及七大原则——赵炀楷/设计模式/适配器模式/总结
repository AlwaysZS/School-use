适配器模式（包装器）：
将原本不兼容的接口融合在一起工作
本质：提高兼容性
属于结构型模式
主要有：类适配器模式，对象适配器模式，接口适配器模式
实际开发的时候不止这三种，形式多种多样

工作原理：
1、接口A转换成接口B
2、用户角度看不到被适配者（B），是解耦的
3、用户调用适配器转换目标接口方法，适配器再调用被适配者的相关接口方法
4、用户收到反馈结果，只是感觉和目标接口交互

类适配器：
以类给到，在Adapter里，将src当成类，继承
缺点：
1、java是单继承机制，所以类适配器必须要继承src类
2、src类在Adapter中会暴露出来，增加了使用成本
优点：可以重写src方法，灵活性好

对象适配器：
以对象给到，在Adapter里，将src当成一个对象，持有
是适配器模式中最常用第一种
与类适配器大致相同，根据合成复用原则，在系统中尽量使用关联关系来替代继承关系
改进了类适配器必须继承src的问题
使用成本更低，更灵活

接口适配器（缺省适配器）：
以接口给到，在Adapter里，将src当成一个接口，实现
当不需要全部实现接口提供的方法时，先设计一个抽象类实现接口，
在需要使用的时候写一个内部类去实现需要使用的方法
适用于不想使用一个接口所有方法的情况